/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.AdminRole;

import UserInterface.SystemMantenanceEnterprise.*;
import Business.EcoSystem;
import Business.Enterprise.DepositEnterprise;
import Business.Enterprise.Enterprise;
import Business.Enterprise.Enterprise.Type;
import Business.Enterprise.InvestmentEnterprise;
import Business.Organization.InvestmentOrg;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.InvestmentWorkRequest;
import Business.WorkQueue.WorkRequest;
import UserInterface.CommonUse.ViewOrderDetailJPanel;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTree;
import javax.swing.table.DefaultTableModel;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;

/**
 *
 * @author lingfengzhou
 */
public class ViewWorkQueueJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageEnterpriseNetworkJPanel
     */
    private EcoSystem ecoSystem;
    private JPanel userProcessContainer;
    private Enterprise enterprise;
    public ViewWorkQueueJPanel(JPanel userProcessContainer, Enterprise enterprise, EcoSystem ecoSystem) {
        initComponents();
        setSize(800,600);
        this.enterprise = enterprise;
        this.ecoSystem = ecoSystem;
        this.userProcessContainer = userProcessContainer;
        populateEnterpriseTree();  
        populateWorkJTable();
    }
    
    private void populateEnterpriseTree(){
        DefaultTreeModel dtm = (DefaultTreeModel) EcoJTree.getModel();
        dtm.setRoot(null);
        DefaultMutableTreeNode top = new DefaultMutableTreeNode(enterprise);
        for(Organization o: enterprise.getOrganizationDirectory().getOrganizationList()){
            DefaultMutableTreeNode son = new DefaultMutableTreeNode(o);
            top.add(son);
            for(UserAccount u: o.getUserAccountDirectory().getUserAccountList()){
                DefaultMutableTreeNode grandson = new DefaultMutableTreeNode(u);
                son.add(grandson);
            }
        }
        dtm.setRoot(top);
    }
    
    private void populateWorkJTable(UserAccount u){
        DefaultTableModel model = (DefaultTableModel) workJTable.getModel();   
        model.setRowCount(0);
        for (WorkRequest request : u.getWorkQueue().getWorkRequestList()){
            InvestmentWorkRequest workRequest = (InvestmentWorkRequest)request;
            Object[] row = new Object[7];
            row[0] = workRequest;
            row[1] = workRequest.getType();
            row[2] = workRequest.getPrice();
            row[3] = workRequest.getInitialAmount();
            row[4] = workRequest.getAmount();
            row[5] = workRequest.getRequestDate();
            row[6] = workRequest.getStatus();           
            model.addRow(row);
            
        }
    }
    
    private void populateWorkJTable(){
        DefaultTableModel model = (DefaultTableModel) workJTable.getModel();   
        model.setRowCount(0);
        for (Organization org: enterprise.getOrganizationDirectory().getOrganizationList()){
            if(org instanceof InvestmentOrg){
                 for (WorkRequest request : org.getWorkQueue().getWorkRequestList()){
                    InvestmentWorkRequest workRequest = (InvestmentWorkRequest)request;
                    Object[] row = new Object[7];
                    row[0] = workRequest;
                    row[1] = workRequest.getType();
                    row[2] = workRequest.getPrice();
                    row[3] = workRequest.getInitialAmount();
                    row[4] = workRequest.getAmount();
                    row[5] = workRequest.getRequestDate();
                    row[6] = workRequest.getStatus();           
                    model.addRow(row);
                }
            } 
        }
       
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        EcoJTree = new javax.swing.JTree();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        workJTable = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        back = new javax.swing.JButton();

        EcoJTree.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        EcoJTree.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                EcoJTreeValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(EcoJTree);

        jLabel4.setFont(new java.awt.Font("新細明體", 0, 24)); // NOI18N
        jLabel4.setText("View Work");

        workJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Work Number", "Type", "Price", "Initial Amount", "Amount", "Date", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(workJTable);

        jButton2.setBackground(new java.awt.Color(255, 255, 255));
        jButton2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/BitCoinMall/picture/view.png"))); // NOI18N
        jButton2.setText("View Transaction Information");
        jButton2.setIconTextGap(10);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        back.setBackground(new java.awt.Color(255, 255, 255));
        back.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        back.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/BitCoinMall/picture/back.png"))); // NOI18N
        back.setText("Back");
        back.setIconTextGap(22);
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel4)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 628, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap(443, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(back)
                        .addGap(34, 34, 34))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(632, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void EcoJTreeValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_EcoJTreeValueChanged
        DefaultMutableTreeNode node = (DefaultMutableTreeNode)EcoJTree.getLastSelectedPathComponent(); 
           
        try {
        if(node.getUserObject() instanceof UserAccount){
                    UserAccount u = (UserAccount)node.getUserObject();
                    populateWorkJTable(u);
                }  
        } catch (NullPointerException npe) {
            return;
        }
    }//GEN-LAST:event_EcoJTreeValueChanged

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int selectedrow = workJTable.getSelectedRow();
        if(selectedrow < 0){
            JOptionPane.showMessageDialog(null, "Please select any row", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        else{
            InvestmentWorkRequest workRequest = (InvestmentWorkRequest) workJTable.getValueAt(selectedrow, 0);
            InvestmentEnterprise e = (InvestmentEnterprise) enterprise;
            ViewOrderDetailJPanel vodjp = new ViewOrderDetailJPanel(userProcessContainer, workRequest, e);
            userProcessContainer.add("ViewOrderDetailJPanel", vodjp);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
       userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTree EcoJTree;
    private javax.swing.JButton back;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable workJTable;
    // End of variables declaration//GEN-END:variables
}
