/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.CustodianEnterprise;

import UserInterface.CommonUse.ViewOrderDetailJPanel;
import Business.EcoSystem;
import Business.Enterprise.CustodyEnterprise;
import Business.Enterprise.Enterprise;
import Business.Enterprise.InvestmentEnterprise;
import Business.Organization.CustomerServiceOrg;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.InvestmentWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Chung-Yang Li
 */
public class CustomerServiceJPanel extends javax.swing.JPanel {

    /**
     * Creates new form AccountingAssistantWorkAreaJPanel
     */
    private JPanel userProcessContainer;
    private UserAccount account;
    private CustomerServiceOrg invoiceOrg;
    private CustodyEnterprise enterprise;
    private EcoSystem ecoSystem;
    public CustomerServiceJPanel(JPanel userProcessContainer, UserAccount account, CustomerServiceOrg invoiceOrg, Enterprise enterprise, EcoSystem ecoSystem) {
        initComponents();
        setSize(800,600);
        this.account = account;
        this.userProcessContainer =userProcessContainer;
        this.invoiceOrg = invoiceOrg;
        this.enterprise = (CustodyEnterprise)enterprise;
        this.ecoSystem = ecoSystem;        
        populateCustodyComboBox();
        populateBuyTable();
        populateSellTable();
        setBackground(new java.awt.Color(255, 255, 153));
    }
        private void populateBuyTable(){
        DefaultTableModel model = (DefaultTableModel) completedJTable.getModel();   
        model.setRowCount(0);
        InvestmentEnterprise enterprise = (InvestmentEnterprise) investorComboBox.getSelectedItem();
        
        for (WorkRequest request : invoiceOrg.getWorkQueue().getWorkRequestList()){
            InvestmentWorkRequest workRequest = (InvestmentWorkRequest)request;   
            if(workRequest.getStatus().equalsIgnoreCase("Filled") && workRequest.getInvestmentEnterprise().equalsIgnoreCase(enterprise.getName())){
                Object[] row = new Object[7];
                row[0] = workRequest;
                row[1] = workRequest.getType();
                row[2] = workRequest.getPrice();
                row[3] = workRequest.getInitialAmount();
                row[4] = workRequest.getAmount();
                row[5] = workRequest.getRequestDate();
                row[6] = workRequest.getStatus();           
                model.addRow(row);
            }
        }
    }
        
        private void populateSellTable(){
        DefaultTableModel model = (DefaultTableModel) tradingJTable.getModel();   
        model.setRowCount(0);
        InvestmentEnterprise enterprise = (InvestmentEnterprise) investorComboBox.getSelectedItem();
        
        for (WorkRequest request : invoiceOrg.getWorkQueue().getWorkRequestList()){
            InvestmentWorkRequest workRequest = (InvestmentWorkRequest)request;
            if(!workRequest.getStatus().equalsIgnoreCase("Filled") && workRequest.getInvestmentEnterprise().equalsIgnoreCase(enterprise.getName())){
                Object[] row = new Object[7];
                row[0] = workRequest;
                row[1] = workRequest.getType();
                row[2] = workRequest.getPrice();
                row[3] = workRequest.getInitialAmount();
                row[4] = workRequest.getAmount();
                row[5] = workRequest.getRequestDate();
                row[6] = workRequest.getStatus();           
                model.addRow(row);
            }
        }
    }
        
        public void populateCustodyComboBox() {
        investorComboBox.removeAllItems();
//        for(Enterprise enterprise: DB4OUtil.getInstance().retrieveSystem().getEnterpriseNetwork().getEnterpriseList()){
        for (Enterprise enterprise : ecoSystem.getEnterpriseNetwork().getEnterpriseList()) {
            if (enterprise instanceof InvestmentEnterprise) {
                investorComboBox.addItem(enterprise);
            }
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        completedJTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tradingJTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        investorComboBox = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        back = new javax.swing.JButton();

        jLabel4.setFont(new java.awt.Font("新細明體", 0, 24)); // NOI18N
        jLabel4.setText("Customer Service");

        completedJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Work Number", "Type", "Price", "Initial Amount", "Amount", "Date", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(completedJTable);

        jLabel1.setFont(new java.awt.Font("新細明體", 0, 18)); // NOI18N
        jLabel1.setText("Trading:");

        tradingJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Work Number", "Type", "Price", "Initial Amount", "Amount", "Date", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tradingJTable);

        jLabel2.setFont(new java.awt.Font("新細明體", 0, 18)); // NOI18N
        jLabel2.setText("Investment Company:");

        investorComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                investorComboBoxActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("新細明體", 0, 18)); // NOI18N
        jLabel3.setText("Complete Order:");

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/BitCoinMall/picture/view.png"))); // NOI18N
        jButton1.setText("View Transaction Information");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(255, 255, 255));
        jButton2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/BitCoinMall/picture/view.png"))); // NOI18N
        jButton2.setText("View Transaction Information");
        jButton2.setIconTextGap(10);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        back.setBackground(new java.awt.Color(255, 255, 255));
        back.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        back.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/BitCoinMall/picture/back.png"))); // NOI18N
        back.setText("Back");
        back.setIconTextGap(22);
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 650, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(investorComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(109, 109, 109)
                        .addComponent(jLabel4))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jButton2)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 650, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(198, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(back))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(investorComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(44, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void investorComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_investorComboBoxActionPerformed
        populateBuyTable();
        populateSellTable();        // TODO add your handling code here:
    }//GEN-LAST:event_investorComboBoxActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int selectedrow = tradingJTable.getSelectedRow();
        if(selectedrow < 0){
            JOptionPane.showMessageDialog(null, "Please select any row", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        else{
            InvestmentWorkRequest workRequest = (InvestmentWorkRequest) tradingJTable.getValueAt(selectedrow, 0);
            InvestmentEnterprise enterprise = (InvestmentEnterprise) investorComboBox.getSelectedItem();
            ViewOrderDetailJPanel vodjp = new ViewOrderDetailJPanel(userProcessContainer, workRequest, enterprise);
            userProcessContainer.add("ViewOrderDetailJPanel", vodjp);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }       // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int selectedrow = completedJTable.getSelectedRow();
        if(selectedrow < 0){
            JOptionPane.showMessageDialog(null, "Please select any row", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        else{
            InvestmentWorkRequest workRequest = (InvestmentWorkRequest) completedJTable.getValueAt(selectedrow, 0);
            InvestmentEnterprise enterprise = (InvestmentEnterprise) investorComboBox.getSelectedItem();
            ViewOrderDetailJPanel vodjp = new ViewOrderDetailJPanel(userProcessContainer, workRequest, enterprise);
            userProcessContainer.add("ViewOrderDetailJPanel", vodjp);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backActionPerformed
        

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back;
    private javax.swing.JTable completedJTable;
    private javax.swing.JComboBox investorComboBox;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tradingJTable;
    // End of variables declaration//GEN-END:variables
}
