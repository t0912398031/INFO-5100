/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.DepositEnterprise;

import Business.EcoSystem;
import Business.Enterprise.DepositEnterprise;
import Business.Enterprise.Enterprise;
import Business.Finance.CoinTransaction.Transaction;
import Business.Finance.CoinTransaction.TransactionHistory;
import Business.Organization.Organization;
import Business.Organization.TransactionOrg;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Image;
import java.awt.Toolkit;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author lingfengzhou
 */
public class TransactionHistoryJPanel1 extends javax.swing.JPanel {

    /**
     * Creates new form TansactionHistoryJPanel
     */
    private JPanel userProcessContainer;
    private UserAccount account;
    private TransactionOrg transactionOrg;
    private DepositEnterprise enterprise;
    private EcoSystem ecoSystem;
    private TransactionHistory transactionHistory;
    public TransactionHistoryJPanel1(JPanel userProcessContainer, UserAccount account, TransactionOrg transactionOrg, Enterprise enterprise, EcoSystem ecoSystem) {
        initComponents();
        setSize(1480,1050);
        this.account = account;
        this.userProcessContainer =userProcessContainer;
        this.transactionOrg = transactionOrg;
        this.enterprise = (DepositEnterprise)enterprise;
        this.ecoSystem = ecoSystem;
        this.transactionHistory = this.enterprise.getTransactionHistory();
        populateTransactiontable();
        setUpBackground();
    }
    
    
    
    public void populateTransactiontable(){
        DefaultTableModel dtm = (DefaultTableModel) transHistoryJTable.getModel();
        dtm.setRowCount(0);
        Object[] row = new Object[6];
        for(Transaction t:transactionHistory.getTransactionList()){
            row[0] = t;
            row[1] = t.getType();
            row[2] = t.getCoinNum();
            row[3] = t.getPrevOwner();
            row[4] = t.getCurOwner();
            row[5] = t.getDealTime();
            dtm.addRow(row);
        }
    }
    
    public void popSearchTransactiontable(List<Transaction> list){
        DefaultTableModel dtm = (DefaultTableModel) transHistoryJTable.getModel();
        dtm.setRowCount(0);
        Object[] row = new Object[6];
        for(Transaction t:list){
            row[0] = t;
            row[1] = t.getType();
            row[2] = t.getCoinNum();
            row[3] = t.getPrevOwner();
            row[4] = t.getCurOwner();
            row[5] = t.getDealTime();
            dtm.addRow(row);
        }
    }
    
    private void setUpBackground(){   
        ImageIcon myImage = new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("1.jpg")));
        Image img = myImage.getImage();
        Image newImg = img.getScaledInstance(jLabel1.getWidth(), jLabel1.getHeight(), Image.SCALE_SMOOTH);

        ImageIcon image = new ImageIcon(newImg);
        jLabel1.setIcon(image);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        backBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        transHistoryJTable = new javax.swing.JTable();
        sTxtFiled = new javax.swing.JTextField();
        searchCoin = new javax.swing.JButton();
        resetBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setLayout(null);

        jLabel4.setFont(new java.awt.Font("Arial", 1, 28)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Transaction History");
        add(jLabel4);
        jLabel4.setBounds(270, 20, 280, 70);

        backBtn.setBackground(new java.awt.Color(255, 255, 255));
        backBtn.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        backBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/BitCoinMall/picture/back.png"))); // NOI18N
        backBtn.setText(" Back");
        backBtn.setIconTextGap(10);
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });
        add(backBtn);
        backBtn.setBounds(20, 20, 140, 50);

        transHistoryJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Transaction Id", "Type", "Coin Number", "Previous owner", "Current owner", "Transaction Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        transHistoryJTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                transHistoryJTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(transHistoryJTable);

        add(jScrollPane1);
        jScrollPane1.setBounds(20, 130, 810, 220);

        sTxtFiled.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sTxtFiledActionPerformed(evt);
            }
        });
        add(sTxtFiled);
        sTxtFiled.setBounds(540, 90, 140, 30);

        searchCoin.setBackground(new java.awt.Color(255, 255, 255));
        searchCoin.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        searchCoin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/BitCoinMall/picture/search.png"))); // NOI18N
        searchCoin.setText("Search");
        searchCoin.setIconTextGap(10);
        searchCoin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchCoinActionPerformed(evt);
            }
        });
        add(searchCoin);
        searchCoin.setBounds(700, 81, 130, 42);

        resetBtn.setBackground(new java.awt.Color(255, 255, 255));
        resetBtn.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        resetBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/BitCoinMall/picture/previous.png"))); // NOI18N
        resetBtn.setText("Reset");
        resetBtn.setIconTextGap(10);
        resetBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetBtnActionPerformed(evt);
            }
        });
        add(resetBtn);
        resetBtn.setBounds(700, 370, 130, 40);

        jLabel1.setBounds(new java.awt.Rectangle(0, 0, 1480, 1050));
        add(jLabel1);
        jLabel1.setBounds(0, 0, 1480, 1050);
    }// </editor-fold>//GEN-END:initComponents

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backBtnActionPerformed

    private void searchCoinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchCoinActionPerformed
        String coinNum = sTxtFiled.getText();
        List<Transaction> list = transactionHistory.searchTransactionHistory(coinNum);
        popSearchTransactiontable(list);
    }//GEN-LAST:event_searchCoinActionPerformed

    private void transHistoryJTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_transHistoryJTableMouseClicked
        int selectedRow = transHistoryJTable.getSelectedRow();
        if(selectedRow<0) return;
        String coinString = (String) transHistoryJTable.getValueAt(selectedRow, 2);
        sTxtFiled.setText(coinString);
    }//GEN-LAST:event_transHistoryJTableMouseClicked

    private void resetBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetBtnActionPerformed
        // TODO add your handling code here:
        populateTransactiontable();
    }//GEN-LAST:event_resetBtnActionPerformed

    private void sTxtFiledActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sTxtFiledActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sTxtFiledActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton resetBtn;
    private javax.swing.JTextField sTxtFiled;
    private javax.swing.JButton searchCoin;
    private javax.swing.JTable transHistoryJTable;
    // End of variables declaration//GEN-END:variables
}
