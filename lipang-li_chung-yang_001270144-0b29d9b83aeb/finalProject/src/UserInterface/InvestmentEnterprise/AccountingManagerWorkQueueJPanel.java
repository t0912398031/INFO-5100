/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.InvestmentEnterprise;

import Business.EcoSystem;
import Business.Enterprise.CustodyEnterprise;
import Business.Enterprise.DepositEnterprise;
import Business.Enterprise.Enterprise;
import Business.Finance.FinancialAccount.FinancialAccount;
import Business.Organization.AccountingOrg;
import Business.Organization.CustomerServiceOrg;
import Business.Organization.Organization;
import Business.Organization.TradingOrg;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.InvestmentWorkRequest;
import Business.WorkQueue.WorkRequest;
import UserInterface.CommonUse.CheckProgress;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Chung-Yang Li
 */
public class AccountingManagerWorkQueueJPanel extends javax.swing.JPanel {

    /**
     * Creates new form AdminWorkAreaJPanel
     */
    private JPanel upc;
    private AccountingOrg accountingOrg;
    private UserAccount account;
    private Enterprise enterprise;
    private EcoSystem ecoSystem;
    private double balance;

    public AccountingManagerWorkQueueJPanel(JPanel upc, UserAccount account, AccountingOrg organization, Enterprise enterprise, EcoSystem ecoSystem) {
        initComponents();
        this.upc = upc;
        this.account = account;
        this.accountingOrg = organization;
        this.enterprise = enterprise;
        this.ecoSystem = ecoSystem;
        populateTable();
        populateMyTable();
        populateCustodyComboBox();       
        popBalance();
        setBackground(new java.awt.Color(204, 255, 204));
    }
    
    public void popBalance(){
        DepositEnterprise depositEnterprise = (DepositEnterprise)ecoSystem.getEnterpriseNetwork().searchByName("Universal Bank");
        
        for(FinancialAccount financialAccount: depositEnterprise.getFinancialAccountDirectory().getFinancialAccountList()){
            if(financialAccount.getName().equalsIgnoreCase(enterprise.getName())) balance = financialAccount.getDollorAccount();
        }
        txtBalance.setText("$"+String.valueOf(balance));
        
    }

    private void populateTable(){
        DefaultTableModel model = (DefaultTableModel) accountingJTable.getModel();   
        model.setRowCount(0);
        
        for (WorkRequest request : accountingOrg.getWorkQueue().getWorkRequestList()){
            InvestmentWorkRequest workRequest = (InvestmentWorkRequest)request; 
            Object[] row = new Object[6];
            row[0] = workRequest;
            row[1] = workRequest.getType();
            row[2] = workRequest.getPrice();
            row[3] = workRequest.getAmount();
            row[4] = workRequest.getRequestDate();
            row[5] = workRequest.getStatus();           
            model.addRow(row);
        }
    }
    
    private void populateMyTable(){
        DefaultTableModel model = (DefaultTableModel) myAccountingJTable.getModel();   
        model.setRowCount(0);
        
        for (WorkRequest request : account.getWorkQueue().getWorkRequestList()){
            InvestmentWorkRequest workRequest = (InvestmentWorkRequest)request;           
            Object[] row = new Object[6];
            row[0] = workRequest;
            row[1] = workRequest.getType();
            row[2] = workRequest.getPrice();
            row[3] = workRequest.getAmount();
            row[4] = workRequest.getRequestDate();
            row[5] = workRequest.getStatus();            
            model.addRow(row);
        }
    }
    
    public void populateCustodyComboBox() {
        custodyComboBox.removeAllItems();
//        for(Enterprise enterprise: DB4OUtil.getInstance().retrieveSystem().getEnterpriseNetwork().getEnterpriseList()){
        for (Enterprise enterprise : ecoSystem.getEnterpriseNetwork().getEnterpriseList()) {
            if (enterprise instanceof CustodyEnterprise) {
                custodyComboBox.addItem(enterprise);
            }
        }

        populateCustodyInformation();
    }

    public void populateCustodyInformation() {
        CustodyEnterprise enterprise = (CustodyEnterprise) custodyComboBox.getSelectedItem();
        txtMaxAmount.setText(String.valueOf(enterprise.getMaxAmount()));
        txtMinAmount.setText(String.valueOf(enterprise.getMinAmount()));
        txtRate.setText(String.valueOf(enterprise.getRate()));
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        btnDelete = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        custodyComboBox = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtMaxAmount = new javax.swing.JTextField();
        txtRate = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtMinAmount = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        accountingJTable = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        myAccountingJTable = new javax.swing.JTable();
        txtBalance = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        btnAssign1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        back = new javax.swing.JButton();
        checkBtn = new javax.swing.JButton();

        jLabel4.setFont(new java.awt.Font("新細明體", 0, 24)); // NOI18N
        jLabel4.setText("My Work");

        btnDelete.setBackground(new java.awt.Color(255, 255, 255));
        btnDelete.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/BitCoinMall/picture/delete - red.png"))); // NOI18N
        btnDelete.setText("Cancel WorkRequest");
        btnDelete.setIconTextGap(10);
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("新細明體", 0, 18)); // NOI18N
        jLabel1.setText("My Work:");

        custodyComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                custodyComboBoxActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("新細明體", 0, 18)); // NOI18N
        jLabel2.setText("Select Custody:");

        jLabel3.setFont(new java.awt.Font("新細明體", 0, 18)); // NOI18N
        jLabel3.setText("Max Amount:");

        jLabel5.setFont(new java.awt.Font("新細明體", 0, 18)); // NOI18N
        jLabel5.setText("Service Rate:");

        txtMaxAmount.setEnabled(false);

        txtRate.setEnabled(false);

        jLabel6.setFont(new java.awt.Font("新細明體", 0, 18)); // NOI18N
        jLabel6.setText("Min Amount:");

        txtMinAmount.setEnabled(false);

        accountingJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Work Number", "Type", "Price", "Amount", "Date", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(accountingJTable);

        myAccountingJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Work Number", "Type", "Price", "Amount", "Date", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(myAccountingJTable);

        txtBalance.setFont(new java.awt.Font("新細明體", 0, 18)); // NOI18N
        txtBalance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBalanceActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("新細明體", 0, 18)); // NOI18N
        jLabel7.setText("Current Balance:");

        btnAssign1.setBackground(new java.awt.Color(255, 255, 255));
        btnAssign1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnAssign1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/BitCoinMall/picture/OK.png"))); // NOI18N
        btnAssign1.setText("Assign to Me");
        btnAssign1.setIconTextGap(10);
        btnAssign1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssign1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(255, 255, 255));
        jButton2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/BitCoinMall/picture/OK - green.png"))); // NOI18N
        jButton2.setText("Confrim");
        jButton2.setIconTextGap(10);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        back.setBackground(new java.awt.Color(255, 255, 255));
        back.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        back.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/BitCoinMall/picture/back.png"))); // NOI18N
        back.setText("Back");
        back.setIconTextGap(22);
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        checkBtn.setBackground(new java.awt.Color(255, 255, 255));
        checkBtn.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        checkBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/BitCoinMall/picture/view.png"))); // NOI18N
        checkBtn.setText("Check Progess");
        checkBtn.setIconTextGap(10);
        checkBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(18, 18, 18)
                                            .addComponent(txtMaxAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addGap(19, 19, 19)
                                            .addComponent(txtMinAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(txtRate, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(checkBtn, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING)))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 765, Short.MAX_VALUE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(back)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnDelete)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnAssign1))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(108, 108, 108)
                                        .addComponent(jLabel7)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtBalance, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(227, 227, 227))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(custodyComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBalance, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(back))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAssign1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(custodyComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMaxAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMinAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jButton2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(checkBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtRate, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(79, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int selectedrow = accountingJTable.getSelectedRow();
        if(selectedrow >=0){
            InvestmentWorkRequest workRequest = (InvestmentWorkRequest) accountingJTable.getValueAt(selectedrow, 0);
            if(workRequest.getStatus().equalsIgnoreCase("Pending") || workRequest.getStatus().equalsIgnoreCase("Pending(Assigned)")){
            int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog(null, "Deny selected workrequest?", "Warning", dialogButton);
                if(dialogResult == JOptionPane.YES_OPTION){
                    workRequest.setStatus("Denied");
                    JOptionPane.showMessageDialog(null, "Denied successfully");  
                    populateTable();
                    populateMyTable();
                }         
            }
            else{
                JOptionPane.showMessageDialog(null, "Unable to deny selected workrequest", "Warning", JOptionPane.WARNING_MESSAGE);
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "Please select any row", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void txtBalanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBalanceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBalanceActionPerformed

    private void btnAssign1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssign1ActionPerformed
        // TODO add your handling code here:
        int selectedrow = accountingJTable.getSelectedRow();
        if(selectedrow >=0){
            InvestmentWorkRequest workRequest = (InvestmentWorkRequest) accountingJTable.getValueAt(selectedrow, 0);
            if(workRequest.getStatus().equalsIgnoreCase("Pending")){
            int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog(null, "Assign selected workrequest?", "Warning", dialogButton);
                if(dialogResult == JOptionPane.YES_OPTION){
                    workRequest.setStatus("Pending(Assigned)");
                    account.getWorkQueue().addWorkRequest(workRequest);
                    JOptionPane.showMessageDialog(null, "Assigned successfully");  
                    populateTable();
                    populateMyTable();
                }         
            }
            else{
                JOptionPane.showMessageDialog(null, "Unable to Assign selected workrequest", "Warning", JOptionPane.WARNING_MESSAGE);
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "Please select any row", "Warning", JOptionPane.WARNING_MESSAGE);
        } 
    }//GEN-LAST:event_btnAssign1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int selectedrow = myAccountingJTable.getSelectedRow();
        if(selectedrow >=0){
            InvestmentWorkRequest workRequest = (InvestmentWorkRequest) myAccountingJTable.getValueAt(selectedrow, 0);
            if(workRequest.getStatus().equalsIgnoreCase("Pending(Assigned)")){
                int dialogButton = JOptionPane.YES_NO_OPTION;
                int dialogResult = JOptionPane.showConfirmDialog(null, "Send selected workrequest?", "Warning", dialogButton);
                if(dialogResult == JOptionPane.YES_OPTION){                      
                    CustodyEnterprise custodyEnterprise = (CustodyEnterprise) custodyComboBox.getSelectedItem();
                    if(balance < workRequest.getAmount() * workRequest.getPrice() * (1 + custodyEnterprise.getRate())){
                        JOptionPane.showMessageDialog(null, "Expenditure exceeds balance", "Warning", JOptionPane.WARNING_MESSAGE);
                        return;
                    }
                    workRequest.setStatus("Open");
                    workRequest.setCustodyEnterprise(custodyEnterprise.getName());
                    workRequest.setRate(Double.parseDouble(txtRate.getText()));
                for (Organization org : custodyEnterprise.getOrganizationDirectory().getOrganizationList()){
                    if (org instanceof TradingOrg || org instanceof CustomerServiceOrg){
                        org.getWorkQueue().addWorkRequest(workRequest);
                    }                   
                }   
                JOptionPane.showMessageDialog(null, "Sent successfully", "Warning", JOptionPane.WARNING_MESSAGE);
                populateTable();
                populateMyTable();
            }
            else{
                JOptionPane.showMessageDialog(null, "Unable to send selected workrequest", "Warning", JOptionPane.WARNING_MESSAGE);
                }
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "Please select any row", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        // TODO add your handling code here:
    upc.remove(this);
        CardLayout layout = (CardLayout) upc.getLayout();
        layout.previous(upc);
    }//GEN-LAST:event_backActionPerformed

    private void checkBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkBtnActionPerformed
        int selectedRow = myAccountingJTable.getSelectedRow();
        if(selectedRow < 0){
            JOptionPane.showMessageDialog(upc, "Please select a workrequest!");
            return;
        }
        WorkRequest workRequest = (WorkRequest) myAccountingJTable.getValueAt(selectedRow, 0);
        CheckProgress checkProgress = new CheckProgress(workRequest);
        checkProgress.setVisible(true);
    }//GEN-LAST:event_checkBtnActionPerformed

    private void custodyComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_custodyComboBoxActionPerformed
        populateCustodyInformation();
       // TODO add your handling code here:
    }//GEN-LAST:event_custodyComboBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable accountingJTable;
    private javax.swing.JButton back;
    private javax.swing.JButton btnAssign1;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton checkBtn;
    private javax.swing.JComboBox custodyComboBox;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable myAccountingJTable;
    private javax.swing.JTextField txtBalance;
    private javax.swing.JTextField txtMaxAmount;
    private javax.swing.JTextField txtMinAmount;
    private javax.swing.JTextField txtRate;
    // End of variables declaration//GEN-END:variables
}
