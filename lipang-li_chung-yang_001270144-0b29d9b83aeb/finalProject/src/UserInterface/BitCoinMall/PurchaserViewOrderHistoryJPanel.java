/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.BitCoinMall;
import Business.BitCoinMall.Order;
import Business.BitCoinMall.OrderHistory;
import Business.Enterprise.DepositEnterprise;
import Business.Enterprise.InvestmentEnterprise;
import Business.Enterprise.MallEnterprise;
import Business.Finance.FinancialAccount.FinancialAccount;
import Business.Organization.LogisticsOrg;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author lingfengzhou
 */
public class PurchaserViewOrderHistoryJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewOrderHistoryJPanel
     */
    private JPanel userProcessContainer;
    private LogisticsOrg logisticsorg;
    private OrderHistory orderHistory;
    private DepositEnterprise depositEnterprise;
    private MallEnterprise mallenterprise;
    private InvestmentEnterprise investmentEnterprise;
    
    public PurchaserViewOrderHistoryJPanel(JPanel userProcessContainer, LogisticsOrg logisticsorg,MallEnterprise mallenterprise, InvestmentEnterprise enterprise,DepositEnterprise depositEnterprise) {
        initComponents();
        this.orderHistory = logisticsorg.getOrderHistory();
        this.userProcessContainer = userProcessContainer;
        this.depositEnterprise = depositEnterprise;
        this.mallenterprise = mallenterprise;
        this.investmentEnterprise = enterprise;
        populateOrderHistoryTab();
        setBackground(new java.awt.Color(204, 255, 204));
    }
    
    
    public void populateOrderHistoryTab() {
        DefaultTableModel dtm = (DefaultTableModel) orderHistoryTab.getModel();
        dtm.setRowCount(0);
        for (Order o:orderHistory.getOrderCatalog()) {
            Object[] row = new Object[4];
            row[0] = o;
            row[1] = o.getTotalPrice();
            row[2] = o.getCreateDate();
            row[3] = o.getStatus();
            dtm.addRow(row);

        }

    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        orderHistoryTab = new javax.swing.JTable();
        viewDetailBtn = new javax.swing.JButton();
        payBtn = new javax.swing.JButton();
        cdBtn = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("Order History");

        orderHistoryTab.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Order Number", "Total Price", "Date", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(orderHistoryTab);

        viewDetailBtn.setBackground(new java.awt.Color(255, 255, 255));
        viewDetailBtn.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        viewDetailBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/BitCoinMall/picture/view.png"))); // NOI18N
        viewDetailBtn.setText("ViewDetails");
        viewDetailBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewDetailBtnActionPerformed(evt);
            }
        });

        payBtn.setBackground(new java.awt.Color(255, 255, 255));
        payBtn.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        payBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/BitCoinMall/picture/confrim.png"))); // NOI18N
        payBtn.setText("Pay");
        payBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payBtnActionPerformed(evt);
            }
        });

        cdBtn.setBackground(new java.awt.Color(255, 255, 255));
        cdBtn.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        cdBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/BitCoinMall/picture/confrim.png"))); // NOI18N
        cdBtn.setText("Picked");
        cdBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cdBtnActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(255, 255, 255));
        jButton3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/BitCoinMall/picture/back.png"))); // NOI18N
        jButton3.setText("Back");
        jButton3.setIconTextGap(22);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 744, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(viewDetailBtn)
                        .addGap(27, 27, 27)
                        .addComponent(payBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cdBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton3)
                        .addGap(135, 135, 135)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(viewDetailBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(payBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cdBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(274, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void viewDetailBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewDetailBtnActionPerformed
        
        int selectedRow = orderHistoryTab.getSelectedRow();
        if(selectedRow<0){
            JOptionPane.showMessageDialog(this, "Please select an order to view");
            return;
        }
        Order order = (Order) orderHistoryTab.getValueAt(selectedRow, 0);
        ViewOrderHistoryDetailJPanel viewOrderDetailJPanel = new ViewOrderHistoryDetailJPanel(userProcessContainer,order);
        userProcessContainer.add("viewOrderDetailJPanel",viewOrderDetailJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_viewDetailBtnActionPerformed

    private void payBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payBtnActionPerformed
        int selectedRow = orderHistoryTab.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select an order to pay");
            return;
        }
        Order order = (Order) orderHistoryTab.getValueAt(selectedRow, 0);
        if (!order.getStatus().equals("unpaid")) {
            JOptionPane.showMessageDialog(this, "Order has already been paid");
            return;
        }
        
        FinancialAccount buyerAccount = depositEnterprise.getAccountInfo(investmentEnterprise.getName());
        if (depositEnterprise.checkCoinAmount((int) order.getTotalPrice(), buyerAccount)) {
            JOptionPane.showMessageDialog(null, "Not enough Coins");
            return;
        }
//              
        depositEnterprise.checkout(order, investmentEnterprise, mallenterprise);
        JOptionPane.showMessageDialog(null, "successfully");
        populateOrderHistoryTab();

    }//GEN-LAST:event_payBtnActionPerformed

    private void cdBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cdBtnActionPerformed
        int selectedRow = orderHistoryTab.getSelectedRow();
        if(selectedRow<0){
            JOptionPane.showMessageDialog(this, "Please select an order to confirm");
            return;
        }
        Order order = (Order) orderHistoryTab.getValueAt(selectedRow, 0);
        if(order.getStatus().equalsIgnoreCase("Ready to pick up")){
            order.setStatus("Finished");
            JOptionPane.showMessageDialog(this, "Order completed!");
            populateOrderHistoryTab();
        }else{
            JOptionPane.showMessageDialog(this, "Unable to confirm");
        }
        
    }//GEN-LAST:event_cdBtnActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_jButton3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cdBtn;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable orderHistoryTab;
    private javax.swing.JButton payBtn;
    private javax.swing.JButton viewDetailBtn;
    // End of variables declaration//GEN-END:variables
}
